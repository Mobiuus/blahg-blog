---
import Layout from "../components/Layout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";

interface Quest {
  text: string;
  status: "doing" | "notdone" | "done";
  color?: string;
}

// Définition des quêtes
const leftColumnQuests: Quest[] = [
  { text: "Introduction to history of art - Ecole du Louvre", status: "doing", color: "orange" },
  { text: "Learn to sail", status: "notdone" },
  { text: "Living abroad", status: "notdone" },
  { text: "Sometimes write blog post", status: "doing", color: "green" },
  { text: "Read The Brothers Karamazov", status: "notdone" }
];

const rightColumnQuests: Quest[] = [
  { text: "Copenhagen", status: "done" },
  { text: "Berlin", status: "notdone" },
  { text: "Vienne", status: "notdone" },
  { text: "Prague", status: "notdone" },
  { text: "Budapest", status: "notdone" }
];
---

<Layout title={`Side Quests | ${SITE_TITLE}`} description={SITE_DESCRIPTION}>
  <main>
    <div class="side-quests-container">
      <div class="quests-columns">
        <div class="quests-list">
          {leftColumnQuests.map((quest) => (
            <div class={`quest-item status-${quest.status}`}>
              {quest.status === "done" ? 
                <del>{quest.text}</del> : 
                (quest.status === "doing" ? 
                  <span class={quest.color || ""}>{quest.text}</span> : 
                  quest.text
                )
              }
            </div>
          ))}
        </div>
        
        <div class="quests-list">
          <div class="quest-header">Next train trip:</div>
          {rightColumnQuests.map((quest) => (
            <div class={`quest-item status-${quest.status}`}>
              {quest.status === "done" ? 
                <del>{quest.text}</del> : 
                (quest.status === "doing" ? 
                  <span class={quest.color || ""}>{quest.text}</span> : 
                  quest.text
                )
              }
            </div>
          ))}
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  .side-quests-container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 0;
  }
  
  .quests-columns {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    align-items: start;
  }
  
  .quests-list {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .quest-header {
    margin-bottom: 0;
  }
  
  .quest-item {
    line-height: 1.5;
    white-space: nowrap;
  }
  
  .status-done {
    color: #666; /* Même gris que "Here's my most recent posts" */
    text-decoration: line-through;
  }
  
  /* Couleurs pour les spans - style surbrillance */
  span.orange {
    color: white;
    background-color: var(--red);
    padding: 1px 3px;
    border-radius: 2px;
  }
  
  span.yellow {
    color: white;
    background-color: var(--yellow);
    padding: 1px 3px;
    border-radius: 2px;
  }
  
  span.blue {
    color: white;
    background-color: var(--blue);
    padding: 1px 3px;
    border-radius: 2px;
  }
  
  span.green {
    color: white;
    background-color: var(--green);
    padding: 1px 3px;
    border-radius: 2px;
  }
  
  /* Responsive */
  @media (max-width: 600px) {
    .quests-columns {
      grid-template-columns: 1fr;
    }
  }
</style>