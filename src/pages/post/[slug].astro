---
import type { GetStaticPaths } from 'astro';
import type { MarkdownInstance } from 'astro';
import Layout from '../../components/Layout.astro';
import BlogPost from '../../layouts/BlogPost.astro';

interface Frontmatter {
  slug: string;
  title: string;
  description?: string;
  added?: string;
  updated?: string;
  tags?: string[];
  heroImage?: string;
}

export const getStaticPaths: GetStaticPaths = async () => {
  const posts: MarkdownInstance<Frontmatter>[] = await Astro.glob('../../posts/*.md');
  return posts.map((post: MarkdownInstance<Frontmatter>) => ({
    params: { slug: post.frontmatter.slug },
    props: { frontmatter: post.frontmatter, Content: post.Content },
  }));
};

type Props = {
  frontmatter: Frontmatter;
  Content: any;
};

const { frontmatter, Content } = Astro.props;

if (!frontmatter) {
  return Astro.redirect('/404');
}
---

<Layout title={frontmatter.title} description={frontmatter.description}>
  <BlogPost content={frontmatter}>
    <Content />
  </BlogPost>
</Layout>